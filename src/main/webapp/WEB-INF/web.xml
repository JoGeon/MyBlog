<?xml version="1.0" encoding="utf-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:/applicationContext.xml</param-value>
	</context-param>
	
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>


	<!--  set the amount of seconds the conf file will be checked for reload
		can be a valid integer (0 denotes check every time, -1 denotes no reload 
		check, default -1)
	<init-param>
		<param-name>confReloadCheckInterval</param-name>
		<param-value>10</param-value>
	</init-param>
    -->
	<!--sets up log level (will be logged to context log) can be: slf4j, TRACE,
		DEBUG, INFO (default), WARN, ERROR, FATAL, sysout:{level} (ie, sysout:DEBUG) 
		if you are having trouble using normal levels use sysout:DEBUG (default WARN)-->
	<init-param>
		<param-name>logLevel</param-name>
		<param-value>INFO</param-value>
	</init-param>

	<!-- you can change status path so that it does not conflict with your installed 
		apps (note, defaults to /rewrite-status) note, must start with / 
	<init-param>
		<param-name>statusPath</param-name>
		<param-value>/statusdo</param-value>
	</init-param>
	-->
	<!-- you can disable status page if desired can be: true, false (default 
		true) 
	<init-param>
		<param-name>statusEnabled</param-name>
		<param-value>true</param-value>
	</init-param>
	-->
		
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
		<filter>
   		<filter-name>OpenSessionInViewFilter</filter-name>
	   <filter-class>
	    org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
	   </filter-class>
	   <init-param>
	    	<param-name>sessionFactoryBeanName</param-name>
	    	<param-value>sessionFactory</param-value>
	   </init-param>
   		<init-param>
		<!---必须配置,且必须为true(开启),因为OpenSessionInViewFilter 过滤器将 Hibernate Session 绑定到请求线程中，它将自动被 Spring 的事务管理器探测到-->
            <param-name>singleSession</param-name>
            <param-value>true</param-value>      
        </init-param>
        <init-param>
		<!--必须配置,否则在service层调用dao方法时会出现在只读模式下(FlushMode.NEVER/MANUAL)写操作不被允许的问题-->
        	<param-name>flushMode </param-name>
      		<param-value>AUTO</param-value>        
        </init-param>
	</filter>

	<filter-mapping>
		<filter-name>OpenSessionInViewFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>


	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

    <listener>
        <listener-class>com.appengine.myblog.util.OnlineCountListener</listener-class>
    </listener>

    <session-config>
        <session-timeout>15</session-timeout>
    </session-config>
	

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>
